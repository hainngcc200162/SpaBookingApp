@page
@{
    Layout = "_LayoutWithUsername";
}
<h1>Contacts</h1>

<div id="searchForm">
    <label for="searchName">Search by Name:</label>
    <input type="text" id="searchName" name="searchName">
    
    <label for="fromDate">From Date:</label>
    <input type="date" id="fromDate" name="fromDate">
    
    <label for="toDate">To Date:</label>
    <input type="date" id="toDate" name="toDate">
    
    <label for="searchByStatus">Search by Status:</label>
    <select id="searchByStatus" name="searchByStatus">
        <option value="">All</option>
        <option value="Waiting">Waiting</option>
        <option value="In Progress">In Progress</option>
        <option value="Resolved">Resolved</option>
    </select>
    
    <button id="searchButton">Search</button>
</div>

<div id="contactTable">
    <table id="contactTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Status</th>
                <th>Subject</th>
                <th>Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

<div class="pagination" id="pagination">
    <!-- Các liên kết phân trang sẽ được tạo ra trong hàm JavaScript -->
</div>

@* <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
*@

<script>
    var token = sessionStorage.getItem("Token");
    if (!token) {
        window.location.href = "/error/AccessDenied.html";
    }

    const apiService = axios.create({
        baseURL: 'http://localhost:5119/api/',
        timeout: 5000,
    });

    apiService.defaults.headers.common["Authorization"] = "Bearer " + token;

    let searchInfo = {
        searchName: "",
        fromDate: "",
        toDate: "",
        searchByStatus: ""
    };

    async function fetchData(pageIndex, searchName = "", fromDate = "", toDate = "", searchByStatus = "") {
    try {
        const response = await apiService.get(`Contact/GetAll?pageIndex=${pageIndex}&searchByName=${searchInfo.searchName}&fromDate=${searchInfo.fromDate}&toDate=${searchInfo.toDate}&searchByStatus=${searchInfo.searchByStatus}`);
        if (response.status !== 200) {
            throw new Error('Network response was not ok');
        }
        const data = response.data;

        // Render lại bảng dữ liệu và cập nhật phân trang
        renderTable(data.data);
        updatePagination(data.pageInformation.currentPage, data.pageInformation.totalPages);

    } catch (error) {
        console.error('Fetch error:', error);
    }
}

    function updatePagination(currentPage, totalPages) {
    const paginationDiv = document.getElementById("pagination");
    paginationDiv.innerHTML = "";

    // Tạo liên kết "First"
    const firstLink = document.createElement('a');
    firstLink.href = "#";
    firstLink.innerText = "First";
    firstLink.addEventListener("click", function () {
        fetchData(0);
    });
    paginationDiv.appendChild(firstLink);

    // Tạo liên kết "Previous"
    if (currentPage > 0) {
        const prevLink = document.createElement('a');
        prevLink.href = "#";
        prevLink.innerText = "Previous";
        prevLink.addEventListener("click", function () {
            fetchData(currentPage - 1);
        });
        paginationDiv.appendChild(prevLink);
    }

    // Tạo liên kết cho các trang
    for (let i = 0; i < totalPages; i++) {
        const pageIndex = i;
        const link = document.createElement('a');
        link.href = "#";
        link.innerText = i + 1;

        link.addEventListener("click", function () {
            fetchData(pageIndex);
        });

        paginationDiv.appendChild(link);
    }

    // Tạo liên kết "Next"
    if (currentPage < totalPages - 1) {
        const nextLink = document.createElement('a');
        nextLink.href = "#";
        nextLink.innerText = "Next";
        nextLink.addEventListener("click", function () {
            fetchData(currentPage + 1);
        });
        paginationDiv.appendChild(nextLink);
    }

    // Tạo liên kết "Last"
    const lastLink = document.createElement('a');
    lastLink.href = "#";
    lastLink.innerText = "Last";
    lastLink.addEventListener("click", function () {
        fetchData(totalPages - 1);
    });
    paginationDiv.appendChild(lastLink);
}


    function renderTable(contacts) {
        const tableBody = document.querySelector('#contactTable tbody');
        tableBody.innerHTML = '';

        for (const contact of contacts) {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${contact.name}</td>
                <td>${contact.email}</td>
                <td>${contact.phone}</td>
                <td>${contact.status}</td>
                <td>${contact.subjectName}</td>
                <td>${new Date(contact.createdAt).toLocaleString()}</td>
                <td>
                    <a href="Contacts/GetContactById?id=${contact.id}" class="button secondary-button">Details</a>
                    <a href="Contacts/UpdateContact?id=${contact.id}&status=${contact.status}" class="button secondary-button">Update</a>
                    <a href="Contacts/DeleteContact?id=${contact.id}" class="button secondary-button">Delete</a>
                </td>
            `;
            tableBody.appendChild(row);
        }
    }

    function onSearchButtonClick() {
        searchInfo.searchName = document.getElementById('searchName').value;
        searchInfo.fromDate = document.getElementById('fromDate').value;
        searchInfo.toDate = document.getElementById('toDate').value;
        searchInfo.searchByStatus = document.getElementById('searchByStatus').value;

        fetchData(0);
    }

    document.getElementById('searchButton').addEventListener('click', onSearchButtonClick);


    window.addEventListener('load', () => {
        const storedSearchInfo = sessionStorage.getItem("searchInfo");
        if (storedSearchInfo) {
            searchInfo = JSON.parse(storedSearchInfo);
            document.getElementById('searchName').value = searchInfo.searchName;
            document.getElementById('fromDate').value = searchInfo.fromDate;
            document.getElementById('toDate').value = searchInfo.toDate;
            document.getElementById('searchByStatus').value = searchInfo.searchByStatus;
        }
        fetchData(0);
    });
</script>