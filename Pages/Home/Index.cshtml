@page
@model SpaBookingApp.Pages.Home.ProvisionModel
@{
    Layout = "_MyLayout";
}
<style>
    .departments-grid {
        padding-top: 20px;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 20px;
    }

    .department-card {
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 10px 20px 10px 20px;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        /* Thêm hiệu ứng mờ */
        box-sizing: border-box;
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        /* Thêm hiệu ứng di chuyển và hiệu ứng mờ */
    }

    .department-card:hover {
        transform: translateY(-5px);
        /* Hiệu ứng nâng cao khi hover */
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        /* Tăng mức độ mờ khi hover */
    }

    /* Các phần code CSS khác không thay đổi */


    .department-card h3 {
        font-size: 1.2rem;
        margin-bottom: 10px;
    }

    .department-card p {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 15px;
    }

    .booking-button {
        background-color: #505152bd;
        color: #fff;
        padding: 8px 60px;
        /* Tăng giá trị của padding để làm nút dài ra */
        border-radius: 10px;
        /* Không cần chỉ định các giá trị đặc biệt cho border-radius */
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .booking-button:hover {
        background-color: #000000;
    }

    .chat-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    .open-chat-button {
        background-color: rgb(6 105 255 / 68%);
        border: none;
        border-radius: 50%;
        width: 55px;
        height: 55px;
        font-size: 18px;
        cursor: pointer;
        outline: none;
    }

    .chat-container {
        display: block;
        /* Hiển thị chat container sẵn sàng */
        position: fixed;
        bottom: 100px;
        right: 20px;
        width: 300px;
        background-color: rgba(255, 255, 255, 0.502);
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(6px);
    }

    .chat-log {
        max-height: 270px;
        overflow: auto;
        padding: 10px;
    }

    .user-input-container {
        display: flex;
        align-items: center;
        border-top: 1px solid #ccc;
        padding: 10px;
    }

    .user-input {
        margin-right: 5px;
        flex: 1;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .message {
        padding: 5px 10px;
        margin: 5px;
        border-radius: 5px;
    }

    .user {
        background-color: #f2f2f2;
        text-align: right;
    }

    .chatbot {
        background-color: #e0e0e0;
        text-align: left;
    }

    .timestamp {
        display: block;
        font-size: 11px;
        margin-top: 5px;
        text-align: left;
        /* Đặt mốc thời gian bên cùng phía trái của tin nhắn user */
    }

    .message.user .timestamp {
        text-align: left;
    }

    .message.chatbot .timestamp {
        text-align: right;
        /* Đặt mốc thời gian bên cùng phía phải của tin nhắn chatbot */
    }
</style>

<section class="section-slide">
    <div class="wrap-slick1 rs1-slick1">
        <div class="slick1">
            <div class="item-slick1" style="background-image: url(../images/slide-08.jpg);">
                <div class="container h-full">
                    <div class="flex-col-l-m h-full p-t-100 p-b-30">
                        <div class="layer-slick1 animated visible-false" data-appear="fadeInDown" data-delay="0">
                            <span class="ltext-202 cl2 respon2">
                                Best Choice 2023
                            </span>
                        </div>

                        <div class="layer-slick1 animated visible-false" data-appear="fadeInUp" data-delay="800">
                            <h2 class="ltext-104 cl2 p-t-19 p-b-43 respon1">
                                New Treatment
                            </h2>
                        </div>

                        <div class="layer-slick1 animated visible-false" data-appear="zoomIn" data-delay="1600">
                            <a href="/bookings/createbooking"
                                class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                Book Now
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="item-slick1" style="background-image: url(../images/slide-9.jpg);">
                <div class="container h-full">
                    <div class="flex-col-l-m h-full p-t-100 p-b-30 respon5">
                        <div class="layer-slick1 animated visible-false" data-appear="rollIn" data-delay="0">
                            <span class="ltext-101 cl2 respon2">
                                Quality service
                            </span>
                        </div>

                        <div class="layer-slick1 animated visible-false" data-appear="lightSpeedIn" data-delay="800">
                            <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1">
                                Make you satisfied
                            </h2>
                        </div>

                        <div class="layer-slick1 animated visible-false" data-appear="slideInUp" data-delay="1600">
                            <a href="/home/contact"
                                class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04">
                                Contact Now
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Banner -->
<div class="sec-banner bg0 p-t-95 p-b-55">
    <div class="container">
        <div class="row">
            <div class="col-md-6 p-b-30 m-lr-auto">
                <!-- Block1 -->
                <div class="block1 wrap-pic-w">
                    <img src="../images/banner-01.png" alt="IMG-BANNER">

                    <a href="/home/product"
                        class="block1-txt ab-t-l s-full flex-col-l-sb p-lr-38 p-tb-34 trans-03 respon3">
                        <div class="block1-txt-child1 flex-col-l">
                            <span class="block1-name ltext-102 trans-04 p-b-8">
                                Product
                            </span>

                            <span class="block1-info stext-102 trans-04">
                                New Trend
                            </span>
                        </div>

                        <div class="block1-txt-child2 p-b-4 trans-05">
                            <div class="block1-link stext-101 cl0 trans-09">
                                Shop Now
                            </div>
                        </div>
                    </a>
                </div>
            </div>

            <div class="col-md-6 p-b-30 m-lr-auto">
                <!-- Block1 -->
                <div class="block1 wrap-pic-w">
                    <img src="../images/slide-04.jpg" alt="IMG-BANNER">

                    <a href="/home/index"
                        class="block1-txt ab-t-l s-full flex-col-l-sb p-lr-38 p-tb-34 trans-03 respon3">
                        <div class="block1-txt-child1 flex-col-l">
                            <span class="block1-name ltext-102 trans-04 p-b-8">
                                Provision
                            </span>

                            <span class="block1-info stext-102 trans-04">
                                New Trend
                            </span>
                        </div>

                        <div class="block1-txt-child2 p-b-4 trans-05">
                            <div class="block1-link stext-101 cl0 trans-09">
                                Book Now
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Product -->
<section class="bg0 p-t-23 p-b-140">
    <div class="container">
        <div class="p-b-10">
            <h3 class="ltext-103 cl5">
                Service Overview
            </h3>
        </div>
        <div class="flex-w flex-sb-m p-b-52">
            <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1" data-filter="*">
                    All Service
                </button>
            </div>

            <div class="flex-w flex-c-m m-tb-10">
                <div class="flex-c-m stext-106 cl6 size-104 bor4 pointer hov-btn3 trans-04 m-r-8 m-tb-4 js-show-filter">
                    <i class="icon-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-filter-list"></i>
                    <i class="icon-close-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
                    Filter
                </div>
            </div>

            <div class="dis-none panel-filter w-full p-t-10">
                <div class="wrap-filter flex-w bg6 w-full p-lr-40 p-t-27 p-lr-15-sm">
                    <div class="filter-col1 p-r-15 p-b-27">
                        <div class="mtext-102 cl2 p-b-15">
                            Sort By Name
                        </div>
                        <ul class="filter-tope-group">
                            <li class="p-b-6">
                                <a href="/Home/Index?sortBy=name&sortOrder=asc" class="filter-link stext-106 trans-04">
                                    Ascending
                                </a>
                            </li>
                            <li class="p-b-6">
                                <a href="/Home/Index?sortBy=name&sortOrder=desc" class="filter-link stext-106 trans-04">
                                    Descending
                                </a>
                            </li>
                            <!-- Add other sort options as needed -->
                        </ul>
                    </div>
                    <div class="filter-col1 p-r-15 p-b-27">
                        <div class="mtext-102 cl2 p-b-15">
                            Sort By Price
                        </div>
                        <ul class="filter-tope-group">
                            <li class="p-b-6">
                                <a href="/Home/Index?sortBy=price&sortOrder=asc" class="filter-link stext-106 trans-04">
                                    Ascending
                                </a>
                            </li>
                            <li class="p-b-6">
                                <a href="/Home/Index?sortBy=price&sortOrder=desc"
                                    class="filter-link stext-106 trans-04">
                                    Descending
                                </a>
                            </li>
                            <!-- Add other sort options as needed -->
                        </ul>
                    </div>
                </div>
            </div>

            <div class="dis-none panel-search w-full p-t-10 p-b-15">
                <form method="get">
                    <div class="bor8 dis-flex p-l-15">
                        <button class="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04" type="submit">
                            <i class="zmdi zmdi-search"></i>
                        </button>

                        <input class="mtext-107 cl2 size-114 plh2 p-r-15" type="text" name="search"
                            placeholder="Search">
                    </div>
                </form>
            </div>
        </div>

        <div class="row isotope-grid">
            @* <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item
            women"></div> *@
            @foreach (var provision in Model.Provisions)
            {
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
                    <div class="block2">
                        <div class="block2-pic hov-img0">
                            @if (!string.IsNullOrEmpty(provision.PosterName))
                            {
                                <img src="@provision.PosterName" alt="Poster" class="img-fluid">
                            }
                            else
                            {
                                <span class="no-poster">No poster available</span>
                            }
                            <a href="~/Home/ServiceDetail?id=@provision.Id"
                                class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04">
                                Quick View
                            </a>
                        </div>

                        <div class="block2-txt flex-w flex-t p-t-14">
                            <div class="block2-txt-child1 flex-col-l">
                                <a href="~/Home/ServiceDetail?id=@provision.Id"
                                    class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                    @provision.Name
                                </a>
                                <span class="stext-105 cl3">
                                    @provision.Price.ToString("C")
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="p-b-10">
            <h5 class="ltext-103 cl5">
                Departments
            </h5>
        </div>
        <img src="../uploads/banner-04.jpg" alt="IMG-BANNER">
        <div class="departments-grid">
            @foreach (var department in Model.Departments)
            {
                <div class="department-card">
                    <h3 style="font-size: 18px; margin-bottom: 15px;">@department.Name</h3>
                    <p style="font-size: 14px; margin-bottom: 13px;">Work at:
                        <strong>@department.OpeningHours</strong>
                    </p>
                    <p style="font-size: 14px; margin-bottom: 13px;">Description:
                        <strong>@department.Description</strong>
                    </p>
                    <a href="@Url.Content("~/Bookings/CreateBooking")">
                        <button class="booking-button" style="font-size: 17px;">Book</button>
                    </a>
                </div>
            }
        </div>
        <br><br>
        <div class="p-b-10">
            <h5 class="ltext-103 cl5">
                Staffs
            </h5>
        </div>
        <div class="row isotope-grid">
            @foreach (var staff in Model.Staffs)
            {
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
                    <div class="block2">
                        <div class="block2-pic hov-img0"><img src="@staff.PosterName" alt="Staff Image" class="img-fluid">
                            <a href="Bookings/CreateBooking"
                                class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04">
                                Book Now
                            </a>
                        </div>

                        <div class="block2-txt flex-w flex-t p-t-14">
                            <div class="block2-txt-child1 flex-col-l">
                                <a href="@Url.Content("~/Bookings/CreateBooking")"
                                    class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                    @staff.Name
                                </a>
                                <span class="stext-105 cl3">
                                    @staff.Description
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>


<div id="chat-button" class="chat-button">
    <button id="open-chat-button" class="open-chat-button">
        <i class="fa-regular fa-comments fa-bounce fa-xl" style="color: #f7f7f7;"></i> </button>
</div>

<div id="chat-container" class="chat-container">
    <div id="chat-log" class="chat-log"></div>
    <div class="user-input-container">
        <input type="text" id="user-input" class="user-input" placeholder="Type your question">
        <button id="send-button" class="send-button"> <i class="fa-regular fa-paper-plane fa-xl" style="color: #215fca;"></i></button>
    </div>
</div>



<script>
    const chatButton = document.getElementById('open-chat-button');
    const chatContainer = document.getElementById('chat-container');
    const userInput = document.getElementById('user-input');
    const sendButton = document.getElementById('send-button');
    const chatLog = document.getElementById('chat-log');

    // Sử dụng biến để theo dõi trạng thái đã hiển thị tin nhắn chào đón hay chưa
    let chatbotGreeted = false;

    // Ẩn chat container mặc định khi trang tải lên
    chatContainer.style.display = 'none';

    chatButton.addEventListener('click', toggleChat);

    function toggleChat() {
        if (chatContainer.style.display === 'none') {
            chatContainer.style.display = 'block';
            // Gọi hàm initChatbot chỉ khi chatbot chưa được chào đón trước đó
            if (!chatbotGreeted) {
                initChatbot();
                chatbotGreeted = true;
            }
        } else {
            chatContainer.style.display = 'none';
        }
    }

    sendButton.addEventListener('click', sendMessage);

    function sendMessage() {
        const userMessage = userInput.value;
        if (userMessage) {
            appendMessage(userMessage, 'user');

            // Gửi tin nhắn của người dùng đến API chatbot và nhận câu trả lời
            callApi(userMessage);

            userInput.value = '';
            chatLog.scrollTop = chatLog.scrollHeight;
        }
    }

    function appendMessage(message, sender) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('message', sender);

        const timestamp = document.createElement('span');
        timestamp.classList.add('timestamp');
        timestamp.innerText = getTimestamp();

        messageElement.appendChild(timestamp);

        const messageText = document.createElement('span');
        messageText.textContent = message;

        messageElement.appendChild(messageText);

        chatLog.insertAdjacentElement('beforeend', messageElement);
        chatLog.scrollTop = chatLog.scrollHeight;
    }

    function getTimestamp() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        return `${hours}:${minutes}`;
    }

    function callApi(userMessage) {
        const baseUrl = '/api/ChatBot';
        const apiUrl = `${baseUrl}?SearchText=${encodeURIComponent(userMessage)}`;

        axios.post(apiUrl)
            .then(function (response) {
                // Xử lý kết quả từ API ở đây
                const chatbotResponse = response.data;
                appendMessage(chatbotResponse, 'chatbot');

                chatLog.scrollTop = chatLog.scrollHeight;
            })
            .catch(function (error) {
                console.error('Lỗi khi gọi API:', error);
            });
    }

    function initChatbot() {
        const initialMessages = ["HI THERE!", "Welcome to FSpa.", "Hello! How can I assist you?"];

        initialMessages.forEach((message, index) => {
            setTimeout(() => {
                appendMessage(message, 'chatbot');
            }, index * 1000); // Khoảng thời gian giữa các tin nhắn (đơn vị mili giây)
        });
    }
</script>

