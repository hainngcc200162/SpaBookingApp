@* 
@page

<link rel="stylesheet" type="text/css" href="~/css/cart.css">
<div class="card">
    <div class="row">
        <div class="col-md-8 cart">
            <div class="title">
                <div class="row">
                    <div class="col"><h4><b>Shopping Cart</b></h4></div>
                    <div class="col align-self-center text-right text-muted">3
                        items</div>
                </div>
            </div>
            <div id="cart-items" class="row border-top border-bottom">
                <!-- Cart items will be dynamically added here -->
            </div>                
        

            <div id="cart-summary">
                <!-- Cart summary will be updated here -->
            </div>

            <a href="#" class="button secondary-button"
                onclick="clearCart()">Clear
                Cart</a>

            <a href="/SpaProducts/Index"
                class="button secondary-button">Continue
                Shopping</a>
            <!--Section: FAQ-->
        </div>
    </div>
</div>
<script>
    async function fetchCart() {
        try {
            const response = await fetch('/api/Cart');
            if (response.ok) {
                const cartData = await response.json();
                updateCartView(cartData);
            } else {
                console.error('Failed to fetch cart data.');
            }
        } catch (error) {
            console.error('An error occurred while fetching cart data:', error);
        }
    }

    async function updateCart(productId) {
        const quantityElement = document.getElementById(`quantity-${productId}`);
        const quantity = parseInt(quantityElement.value);

        const cartItems = Array.from(document.querySelectorAll('input[type="number"]'));
        const updatedProductIdentifiers = cartItems
            .filter(item => parseInt(item.value) > 0)
            .map(item => {
                const id = item.id.split('-')[1];
                const q = parseInt(item.value);
                return Array(q).fill(id);
            })
            .flat()
            .join('-');
        console.log(updatedProductIdentifiers);
        try {
            const apiUrl = `/api/Cart/?productIdentifiers=${updatedProductIdentifiers}`;
            const response = await fetch(apiUrl, {
                method: 'PUT'
            });

            if (response.ok) {
                const cartData = await response.json();
                fetchCart(); // Call fetchCart to update the cart view
            } else {
                console.error('Failed to update cart data.');
            }
        } catch (error) {
            console.error('An error occurred while updating cart data:', error);
        }
    }

   function updateCartView(cartData) {
        const cartItemsElement = document.getElementById('cart-items');
        cartItemsElement.innerHTML = '';

        if (cartData && cartData.cartItems && cartData.cartItems.length > 0) {
            const cartContainer = document.createElement('div');
            cartContainer.classList.add('cart-container');

            cartData.cartItems.forEach(item => {
                const cartItem = document.createElement('div');
                cartItem.className="row main align-items-center";
                cartItem.classList.add('cart-item');

                const productImage = document.createElement('div');
                productImage.classList.add('product-image');
                productImage.className="col-2";
                productImage.innerHTML = `<img class="img-fluid" src="${item.spaProduct.posterName}" alt="Product Poster">`;

                const productInfo = document.createElement('div');
                productInfo.classList.add('product-info');
                productInfo.className="col";
                productInfo.innerHTML = `
                    <div class="row text-muted">${item.spaProduct.name}</div>
                    <div class="product-quantity">
                        <input type="number" id="quantity-${item.spaProduct.id}" min="0" value="${item.quantity}">
                    </div>
                    <div class="product-price">$${item.spaProduct.price}</div>
                    <div class="product-total">$${(item.spaProduct.price * item.quantity).toFixed(2)}</div>
                    <div class="product-actions">
                        <button onclick="updateCart(${item.spaProduct.id})">Update</button>
                        <button onclick="removeCartItem(${item.spaProduct.id})">Remove</button>
                    </div>
                `;

                cartItem.appendChild(productImage);
                cartItem.appendChild(productInfo);
                cartContainer.appendChild(cartItem);
            });

            cartItemsElement.appendChild(cartContainer);

            const cartSummaryElement = document.getElementById('cart-summary');
            cartSummaryElement.innerHTML = `
                <p><strong>Subtotal:</strong> $${cartData.subTotal.toFixed(2)}</p>
                <p><strong>Shipping Fee:</strong> $${cartData.shippingFee.toFixed(2)}</p>
                <p><strong>Total Price:</strong> $${cartData.totalPrice.toFixed(2)}</p>
            `;
        } else {
            cartItemsElement.innerHTML = '<p>Your cart is empty.</p>';
            document.getElementById('cart-summary').innerHTML = '';
        }
    }


    async function removeCartItem(productId) {
        const quantityElement = document.getElementById(`quantity-${productId}`);
        quantityElement.value = 0;
        updateCart(productId);
        fetchCart();
    }

    async function clearCart() {
        try {
            const response = await fetch('/api/Cart', {
                method: 'DELETE'
            });

            if (response.ok) {
                fetchCart(); // Refresh the cart view after clearing
            } else {
                console.error('Failed to clear the cart.');
            }
        } catch (error) {
            console.error('An error occurred while clearing the cart:', error);
        }
    }

    fetchCart();
</script> *@
