@page
@{
    Layout = "_LayoutWithUsername";
}

<!DOCTYPE html>
<html>
<head>
    <title>Update Booking (Customer)</title>
</head>
<body>

<h1>Update Booking (Customer)</h1>

<style>
    #bookingForm {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    #bookingForm div {
        margin-bottom: 15px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    select, input[type="datetime-local"] {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 3px;
        background-color: #fff;
    }

    button {
        padding: 10px 15px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 3px;
        cursor: pointer;
    }
</style>

<div id="updateForm">
    <div>
        <label for="staffSelect">Select Staff:</label>
        <select id="staffSelect" name="staffSelect">
            <!-- Populate staff options from API -->
        </select>
    </div>

    <div>
        <label for="departmentSelect">Select Department:</label>
        <select id="departmentSelect" name="departmentSelect">
            <!-- Populate department options from API -->
        </select>
    </div>

    <div>
        <label for="provisionSelect">Select Provisions:</label>
        <select id="provisionSelect" name="provisionSelect" multiple>
            <!-- Populate provision options from API -->
        </select>
    </div>

    <div>
        <label for="startTime">Start Time:</label>
        <input type="datetime-local" id="startTime" name="startTime">
    </div>

    <div>
        <label for="note">Note:</label>
        <textarea id="note" name="note"></textarea>
    </div>

    <div>
        <button id="updateButton">Update Booking</button>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    var token = sessionStorage.getItem("Token");
    if (!token) {
        window.location.href = "/error/AccessDenied.html";
    }

    // Fetch staff, department, provision data and populate dropdowns
    async function fetchAndPopulateData() {
        try {
            // Fetch staff data
            const largePageSize = 10000;
            const staffResponse = await axios.get(`/api/Staff/GetAll?pageIndex=0&pageSize=${largePageSize}`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            const staffSelect = document.getElementById('staffSelect');
            staffResponse.data.data.forEach(staff => {
                const option = document.createElement('option');
                option.value = staff.id;
                option.textContent = staff.name;
                staffSelect.appendChild(option);
            });

            // Fetch department data
            const departmentResponse = await axios.get(`/api/Department/GetAll?pageIndex=0&pageSize=${largePageSize}`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            const departmentSelect = document.getElementById('departmentSelect');
            departmentResponse.data.data.forEach(department => {
                const option = document.createElement('option');
                option.value = department.id;
                option.textContent = department.name;
                departmentSelect.appendChild(option);
            });

            // Fetch provision data
            const provisionResponse = await axios.get('/api/Provision/GetAll', {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            const provisionSelect = document.getElementById('provisionSelect');
            provisionResponse.data.data.forEach(provision => {
                const option = document.createElement('option');
                option.value = provision.id;
                option.textContent = provision.name;
                provisionSelect.appendChild(option);
            });

            fetchBookingData();
        } catch (error) {
            console.error('Fetch error:', error);
        }
    }

    async function fetchBookingData() {
        try {
            const urlParams = new URLSearchParams(window.location.search);
            const bookingId = urlParams.get('id');
            if (!bookingId) {
                console.error('Booking ID not provided in URL.');
                return;
            }

            const response = await axios.get(`/api/Booking/${bookingId}`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            if (response.status !== 200) {
                throw new Error('Network response was not ok');
            }

            const booking = response.data.data;

            const staffSelect = document.getElementById('staffSelect');
            staffSelect.value = booking.staffId;

            const departmentSelect = document.getElementById('departmentSelect');
            departmentSelect.value = booking.departmentId;

            const provisionSelect = document.getElementById('provisionSelect');
            const selectedProvisionIds = booking.provisions.map(provision => provision.id);
            Array.from(provisionSelect.options).forEach(option => {
                option.selected = selectedProvisionIds.includes(parseInt(option.value));
            });

            const startTimeInput = document.getElementById('startTime');
            startTimeInput.value = new Date(booking.startTime).toISOString().substring(0, 16);

            const noteInput = document.getElementById('note');
            noteInput.value = booking.note;
        } catch (error) {
            console.error('Fetch error:', error);
        }
    }

    // Call the API to update a booking for customer
    function updateBookingForCustomer() {
        // ... (Similar to the admin update function, adjust the URL and request body)

        const staffSelect = document.getElementById('staffSelect');
        const departmentSelect = document.getElementById('departmentSelect');
        const provisionSelect = document.getElementById('provisionSelect');
        const startTimeInput = document.getElementById('startTime');
        const noteInput = document.getElementById('note');

        const selectedStaffId = staffSelect.value;
        const selectedDepartmentId = departmentSelect.value;
        const selectedProvisionIds = Array.from(provisionSelect.selectedOptions).map(option => parseInt(option.value));
        const startTime = startTimeInput.value;
        const endTime = '2023-08-26T05:04:09.579Z'; 
        const note = noteInput.value;

        console.log('Selected Staff:', selectedStaffId);
        console.log('Selected Department:', selectedDepartmentId);
        console.log('Selected Provisions:', selectedProvisionIds);
        console.log('Start Time:', startTime);
        console.log('Note:', note);


        const requestBody = selectedProvisionIds;

        const urlParams = new URLSearchParams(window.location.search);
        const bookingId = urlParams.get('id');

        axios.put(`/api/Booking/UpdateBookingByCus/${bookingId}?departmentId=${selectedDepartmentId}&staffId=${selectedStaffId}&startTime=${startTime}&endTime=${endTime}`, requestBody, {
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            // Handle success, e.g. show success message to user
            console.log('Booking updated:', response.data);
        })
        .catch(error => {
            // Handle error, e.g. show error message to user
            console.error('Error updating booking:', error);
        });
    }

    // Populate dropdowns and set up event listener
    window.addEventListener('load', () => {
        fetchAndPopulateData();

        document.getElementById('updateButton').addEventListener('click', updateBookingForCustomer);
    });

</script>

</body>
</html>
