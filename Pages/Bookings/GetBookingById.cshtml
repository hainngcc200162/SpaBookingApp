@page
@{
    Layout = "_AdminLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Bookings /</span>Booking Details
    </h4>

    <div class="col-xl">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Bookings Informations </h5>
                <small class="text-muted float-end">Info label</small>
            </div>

            <div class="card-body">

                <div class="mb-3">
                    <div class="booking-detail"></div>
                </div>
                <a href="/Bookings/Index" class="btn btn-secondary">Back</a>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    var token = sessionStorage.getItem("Token");
    if (!token) {
        window.location.href = "/error/AccessDenied.html";
    }

    const apiService = axios.create({
        baseURL: '/api',
        timeout: 5000,
        headers: {
            'Authorization': `Bearer ${token}`
        }
    });

    async function fetchBookingById(bookingId) {
        try {
            const response = await apiService.get(`/Booking/${bookingId}`);
            if (response.status !== 200) {
                throw new Error('Network response was not ok');
            }
            const data = response.data;

            renderBooking(data);
            console.log(data);
        } catch (error) {
            console.error('Fetch error:', error);
        }
    }

    function renderBooking(booking) {
        const bookingDetailDiv = document.querySelector('.booking-detail');

        const provisions = booking.data.provisions ? booking.data.provisions.map(provision => `
        <li>
            <p><strong>Provision ID:</strong> ${provision.id}</p>
            <p><strong>Provision Name:</strong> ${provision.name}</p>
            <p><strong>Duration Minutes:</strong> ${provision.durationMinutes}</p>
            <p><strong>Description:</strong> ${provision.description}</p>
            <p><strong>Price:</strong> ${provision.price}</p>
        </li>
    <br>
    `).join('') : 'No provisions available';

        bookingDetailDiv.innerHTML = `
        <p><strong>Booking ID:</strong> ${booking.data.id}</p>
        <p><strong>User Name:</strong> ${booking.data.userFirstName} ${booking.data.userLastName}</p>
        <p><strong>User Email:</strong> ${booking.data.userEmail}</p>
        <p><strong>User Phone Number:</strong> ${booking.data.userPhoneNumber}</p>
        <p><strong>Department Name:</strong> ${booking.data.departmentName}</p>
        <p><strong>Staff Name:</strong> ${booking.data.staffName}</p>
        <p><strong>Start Time:</strong> ${new Date(booking.data.startTime).toLocaleString()}</p>
        <p><strong>End Time:</strong> ${new Date(booking.data.endTime).toLocaleString()}</p>
        <p><strong>Status:</strong> ${booking.data.status}</p>
        <p><strong>Note:</strong> ${booking.data.note}</p>
        <h2>Provisions:</h2>
        <ul>
            ${provisions}
        </ul>
    `;
    }



    window.addEventListener('load', () => {
        // Lấy tham số 'id' từ URL
        const urlParams = new URLSearchParams(window.location.search);
        const bookingId = urlParams.get('id');

        if (bookingId) {
            fetchBookingById(bookingId);
        } else {
            console.error('Booking ID not provided in URL.');
        }
    });

    // Thêm sự kiện click cho nút "Back"
    document.getElementById('backButton').addEventListener('click', function () {
        history.back(); // Quay lại trang trước
    });
</script>
