@page
@model SpaBookingApp.Pages.Products.ProductModel
@inject HttpClient HttpClient
@{
    ViewData["Title"] = "All Spa Products";
    Layout = "_LayoutWithUsername";
}

<h1>All Spa Products</h1>
<a href="/Products/CreateProduct" class="button primary-button">Create</a>

<!-- Sort Form -->
<form method="get">
    <select name="sortBy">
        <option value="">Sort By</option>
        <option value="name" selected="@(Model.SortBy == "name")">Name</option>
        <option value="category" selected="@(Model.SortBy == "category")">Category</option>
        <option value="price" selected="@(Model.SortBy == "price")">Price</option>
    </select>

    <select name="sortOrder">
        <option value="">Sort Order</option>
        <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
        <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
    </select>
    <button type="submit">Sort</button>
</form>

<form method="get">
    <input type="text" name="search" placeholder="Search by Name" value="@Model.Search" />
    <select name="category">
        <option value="">All Categories</option>
        @foreach (var category in Model.Categories)
        {
            <option value="@category.Name" selected="@(Model.Category == category.Name ? "selected" : null)">@category.Name</option>
        }
    </select>

    <input type="number" name="minPrice" placeholder="Min Price" value="@Model.MinPrice" />
    <input type="number" name="maxPrice" placeholder="Max Price" value="@Model.MaxPrice" />
    <button type="submit">Search</button>
</form>




@if (TempData.ContainsKey("Product"))
{
    var product = TempData["Product"] as GetSpaProductDto;
    <h2>Product Details</h2>
    <table>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Quantity In Stock</th>
            <th>Category</th>
            <th>Poster</th>
        </tr>
        <tr>
            <td>@product.Id</td>
            <td>@product.Name</td>
            <td>@product.Description</td>
            <td>@product.Description</td>
            <td>@product.QuantityInStock</td>
            <td>@product.CategoryId</td>
            <td>@product.PosterName</td>
        </tr>
    </table>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <p class="error-message">@Model.ErrorMessage</p>
    }

    <a href="~/Provisions" class="button secondary-button">Back to Provisions</a>
}

else if (Model.SpaProducts != null && Model.SpaProducts.Any())
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Quantity In Stock</th>
                <th>Category</th>
                <th>Poster</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.SpaProducts)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Description</td>
                    <td>@product.QuantityInStock</td>
                    <td>@product.CategoryName</td>
                    <td>
                        @if (!string.IsNullOrEmpty(product.PosterName))
                            {
                                <img src="@product.PosterName" alt="Poster" class="poster-image" />
                            }
                            else
                            {
                                <span class="no-poster">No poster available</span>
                            }
                    </td>
                    <td>
                        <a href="~/Products/GetProductById?id=@product.Id" class="button secondary-button">Details</a>
                        <a href="~/Products/UpdateProduct?id=@product.Id" class="button secondary-button">Update</a>
                        <a href="~/Products/DeleteProduct?id=@product.Id" class="button secondary-button">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        @if (Model.PageInformation.PageIndex > 0)
        {
            <a href="~/Products/Index?pageIndex=0&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">First</a>
            <a href="~/Products/Index?pageIndex=@(Model.PageInformation.PageIndex - 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Previous</a>
        }
        @for (int i = 0; i < Model.PageInformation.TotalPages; i++)
        {
            <a href="~/Products/Index?pageIndex=@i&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">@i</a>
        }
        @if (Model.PageInformation.PageIndex < Model.PageInformation.TotalPages - 1)
        {
            <a href="~/Products/Index?pageIndex=@(Model.PageInformation.PageIndex + 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Next</a>
            <a href="~/Products/Index?pageIndex=@(Model.PageInformation.TotalPages - 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Last</a>
        }
    </div>
}
else
{
    <p class="no-products">No products found.</p>
}
