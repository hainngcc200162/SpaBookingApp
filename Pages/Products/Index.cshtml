@page
@model SpaBookingApp.Pages.Products.ProductModel
@inject HttpClient HttpClient
@{
    ViewData["Title"] = "All Spa Products";
    Layout = "_AdminLayout";
}
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Products /</span> All Products
    </h4>
    <a href="/Products/CreateProduct" class="btn btn-primary">Create</a>
    <br><br>
    <!-- Sort Form -->
    <form method="get" class="d-flex">
        <select name="sortBy" class="form-select color-dropdown">
            <option value="">Sort By</option>
            <option value="name" selected="@(Model.SortBy == "name")">Name</option>
            <option value="category" selected="@(Model.SortBy == "category")">Category</option>
            <option value="price" selected="@(Model.SortBy == "price")">Price</option>
        </select>

        <select name="sortOrder" class="form-select color-dropdown">
            <option value="">Sort Order</option>
            <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
            <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
        </select>
        <button class="btn btn-outline-primary" type="submit">Sort</button>
    </form>
    <br>
    <form method="get" class="d-flex">
        <input type="text" name="search" class="form-control me-2" placeholder="Search by Name" value="@Model.Search" />
        <input type="number" class="form-control me-2" name="minPrice" placeholder="Min Price"
            value="@Model.MinPrice" />
        <input type="number" class="form-control me-2" name="maxPrice" placeholder="Max Price"
            value="@Model.MaxPrice" /> <select name="category" class="form-select color-dropdown">
            <option value="">All Categories</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Name" selected="@(Model.Category == category.Name ? "selected" : null)">
                    @category.Name
                </option>
            }
        </select>
        <button class="btn btn-outline-primary" type="submit">Search</button>
    </form>
    <hr class="my-5" />



    @if (TempData.ContainsKey("Product"))
    {
        var product = TempData["Product"] as GetSpaProductDto;
        <h2>Product Details</h2>
        <table>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Quantity In Stock</th>
                <th>Category</th>
                <th>Poster</th>
            </tr>
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@product.Description</td>
                <td>@product.QuantityInStock</td>
                <td>@product.CategoryId</td>
                <td>@product.PosterName</td>
            </tr>
        </table>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <p class="error-message">@Model.ErrorMessage</p>
        }

        <a href="~/Provisions" class="button secondary-button">Back to Provisions</a>
    }

    else if (Model.SpaProducts != null && Model.SpaProducts.Any())
    {
        <div class="card">
            <h5 class="card-header">Information Table</h5>
            <div class="table-responsive text-nowrap">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            @* <th>Description</th> *@
                            <th>Quantity In Stock</th>
                            <th>Category</th>
                            <th>Poster</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        @foreach (var product in Model.SpaProducts)
                        {
                            <tr>
                                <td><i class=""></i> <strong>@product.Name</strong></td>
                                <td>@product.Price.ToString("C")</td>
                                @* <td>@product.Description</td> *@
                                <td>@product.QuantityInStock</td>
                                <td>@product.CategoryName</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(product.PosterName))
                                    {
                                        <img src="@product.PosterName" alt="Poster" class="poster-image" />
                                    }
                                    else
                                    {
                                        <span class="no-poster">No poster available</span>
                                    }
                                </td>
                                <td>
                                    <a href="~/Products/GetProductById?id=@product.Id" class="button secondary-button"><i class="fa-solid fa-eye fa-fade fa-xl"></i></a> &nbsp;
                                    <a href="~/Products/UpdateProduct?id=@product.Id" class="button secondary-button"><i class="fa-solid fa-pen-to-square fa-beat fa-xl"></i></a> &nbsp;
                                    <a href="~/Products/DeleteProduct?id=@product.Id" class="button secondary-button"><i
                                            class="fa-solid fa-trash fa-bounce fa-xl" style="color: #e93f3f;"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="pagination">
            @if (Model.PageInformation.PageIndex > 0)
            {
                <a
                    href="~/Products/Index?pageIndex=0&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">First</a>
                <a
                    href="~/Products/Index?pageIndex=@(Model.PageInformation.PageIndex - 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Previous</a>
            }
            @for (int i = 0; i < Model.PageInformation.TotalPages; i++)
            {
                int displayedPageIndex = i + 1;
                <a
                    href="~/Products/Index?pageIndex=@i&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">@displayedPageIndex</a>
            }
            @if (Model.PageInformation.PageIndex < Model.PageInformation.TotalPages - 1)
            {
                <a
                    href="~/Products/Index?pageIndex=@(Model.PageInformation.PageIndex + 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Next</a>
                <a
                    href="~/Products/Index?pageIndex=@(Model.PageInformation.TotalPages - 1)&search=@Model.Search&category=@Model.Category&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortBy=@Model.SortBy&sortOrder=@Model.SortOrder">Last</a>
            }
        </div>
    }
    else
    {
        <p class="no-products">No products found.</p>
    }
</div>